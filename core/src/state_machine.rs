///跟随者
pub struct Follower {
    ///通用持久化状态，服务器已知最新的任期（再服务器首次启动的时候初始化为0，单调递增）
    pub current_term: i64,
    ///通用持久化状态，当前任期内收到选票的候选者id 如果没有投给任何候选者 则为空
    pub voted_for: Option<i64>,
    ///通用持久化状态，日志条目；每个条目包含了用于状态机的命令，以及领导者接受到该条目时的任期（第一个索引为1）
    pub logs: Vec<String>,
    ///通用易失性状态，已知已提交的最高的日志条目的索引（初始值为0，单调递增）
    pub commit_index: i64,
    ///通用易失性状态，已经倍应用到状态机的最高的日志条目的索引（初始值为0，单调递增）
    pub last_applied: i64,
}

///候选者
pub struct Candidate {
    ///通用持久化状态，服务器已知最新的任期（再服务器首次启动的时候初始化为0，单调递增）
    pub current_term: i64,
    ///通用持久化状态，当前任期内收到选票的候选者id 如果没有投给任何候选者 则为空
    pub voted_for: Option<i64>,
    ///通用持久化状态，日志条目；每个条目包含了用于状态机的命令，以及领导者接受到该条目时的任期（第一个索引为1）
    pub logs: Vec<String>,
    ///通用易失性状态，已知已提交的最高的日志条目的索引（初始值为0，单调递增）
    pub commit_index: i64,
    ///通用易失性状态，已经倍应用到状态机的最高的日志条目的索引（初始值为0，单调递增）
    pub last_applied: i64,
}

///领导者
pub struct Leader {
    ///通用持久化状态，服务器已知最新的任期（再服务器首次启动的时候初始化为0，单调递增）
    pub current_term: i64,
    ///通用持久化状态，当前任期内收到选票的候选者id 如果没有投给任何候选者 则为空
    pub voted_for: Option<i64>,
    ///通用持久化状态，日志条目；每个条目包含了用于状态机的命令，以及领导者接受到该条目时的任期（第一个索引为1）
    pub logs: Vec<String>,
    ///通用易失性状态，已知已提交的最高的日志条目的索引（初始值为0，单调递增）
    pub commit_index: i64,
    ///通用易失性状态，已经倍应用到状态机的最高的日志条目的索引（初始值为0，单调递增）
    pub last_applied: i64,
    ///领导者易失性状态，对于每一台服务器，发送到该服务器的下一条日志条目的索引（初始值为领导者最后的日志条目索引+1）
    pub next_index: i64,
    ///领导者易失性状态，对于每一台服务器，已知的已经复制到该服务器的最高日志条目的索引（初始值为0，单调递增）
    pub match_index: i64,
}